{"ast":null,"code":"var _jsxFileName = \"D:\\\\web development\\\\creative_agency\\\\client\\\\src\\\\components\\\\Home\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseConfig from './firebase.config';\nimport { useHistory, useLocation } from 'react-router';\nimport './Login.css';\nimport { UserContext } from '../../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  if (firebase.apps.length === 0) {\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  const history = useHistory();\n  const location = useLocation();\n  const {\n    from\n  } = location.state || {\n    from: {\n      pathname: \"/\"\n    }\n  };\n  const provider = new firebase.auth.GoogleAuthProvider();\n\n  const handleGoogleSignIn = () => {\n    firebase.auth().signInWithPopup(provider).then(result => {\n      const {\n        displayName,\n        email\n      } = result.user;\n      const signedInUser = {\n        name: displayName,\n        email\n      };\n      setLoggedInUser(signedInUser);\n      history.replace(from);\n    }).catch(error => {\n      var errorCode = error.code;\n      var errorMessage = error.message; // The email of the user's account used.\n\n      var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n      var credential = error.credential; // ...\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container d-flex align-items-center justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mb-3\",\n        children: \"LOGIN WITH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGoogleSignIn,\n        className: \"btn btn-warning rounded-pill login-btn\",\n        children: \"Continue with google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-3\",\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"Create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 52\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"PIailSvkpuRmeZii6BQZ9MYdqB8=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/web development/creative_agency/client/src/components/Home/Login/Login.js"],"names":["React","useContext","firebase","firebaseConfig","useHistory","useLocation","UserContext","Login","apps","length","initializeApp","loggedInUser","setLoggedInUser","history","location","from","state","pathname","provider","auth","GoogleAuthProvider","handleGoogleSignIn","signInWithPopup","then","result","displayName","email","user","signedInUser","name","replace","catch","error","errorCode","code","errorMessage","message","credential"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,cAAxC;AACA,OAAO,aAAP;AACA,SAASC,WAAT,QAA4B,cAA5B;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,MAAIL,QAAQ,CAACM,IAAT,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;AAC5BP,IAAAA,QAAQ,CAACQ,aAAT,CAAuBP,cAAvB;AACH;;AAED,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCX,UAAU,CAACK,WAAD,CAAlD;AACA,QAAMO,OAAO,GAAGT,UAAU,EAA1B;AACA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAWD,QAAQ,CAACE,KAAT,IAAkB;AAAED,IAAAA,IAAI,EAAE;AAAEE,MAAAA,QAAQ,EAAE;AAAZ;AAAR,GAAnC;AAEA,QAAMC,QAAQ,GAAG,IAAIhB,QAAQ,CAACiB,IAAT,CAAcC,kBAAlB,EAAjB;;AAEA,QAAMC,kBAAkB,GAAG,MAAM;AAC7BnB,IAAAA,QAAQ,CAACiB,IAAT,GACKG,eADL,CACqBJ,QADrB,EAEKK,IAFL,CAEWC,MAAD,IAAY;AACd,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA;AAAf,UAAyBF,MAAM,CAACG,IAAtC;AACA,YAAMC,YAAY,GAAG;AAAEC,QAAAA,IAAI,EAAEJ,WAAR;AAAqBC,QAAAA;AAArB,OAArB;AACAd,MAAAA,eAAe,CAACgB,YAAD,CAAf;AACAf,MAAAA,OAAO,CAACiB,OAAR,CAAgBf,IAAhB;AAEH,KARL,EAQOgB,KARP,CAQcC,KAAD,IAAW;AAChB,UAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,UAAIC,YAAY,GAAGH,KAAK,CAACI,OAAzB,CAFgB,CAGhB;;AACA,UAAIV,KAAK,GAAGM,KAAK,CAACN,KAAlB,CAJgB,CAKhB;;AACA,UAAIW,UAAU,GAAGL,KAAK,CAACK,UAAvB,CANgB,CAOhB;AACH,KAhBL;AAiBH,GAlBD;;AAmBA,sBACI;AAAK,IAAA,SAAS,EAAC,kEAAf;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACA;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,OAAO,EAAEhB,kBAAjB;AAAqC,QAAA,SAAS,EAAC,wCAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,2DAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAxCD;;GAAMd,K;UAMcH,U,EACCC,W;;;KAPfE,K;AA0CN,eAAeA,KAAf","sourcesContent":["import React, { useContext } from 'react';\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\n\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport './Login.css';\r\nimport { UserContext } from '../../../App';\r\n\r\n\r\nconst Login = () => {\r\n    if (firebase.apps.length === 0) {\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n    const handleGoogleSignIn = () => {\r\n        firebase.auth()\r\n            .signInWithPopup(provider)\r\n            .then((result) => {\r\n                const { displayName, email } = result.user;\r\n                const signedInUser = { name: displayName, email }\r\n                setLoggedInUser(signedInUser);\r\n                history.replace(from);\r\n                \r\n            }).catch((error) => {\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                // The email of the user's account used.\r\n                var email = error.email;\r\n                // The firebase.auth.AuthCredential type that was used.\r\n                var credential = error.credential;\r\n                // ...\r\n            });\r\n    }\r\n    return (\r\n        <div className=\"login-container d-flex align-items-center justify-content-center\">\r\n        <div className=\"login-form text-center\">\r\n        <h1 className=\"mb-3\">LOGIN WITH</h1>\r\n        <button onClick={handleGoogleSignIn} className=\"btn btn-warning rounded-pill login-btn\">Continue with google</button>\r\n        <p className=\"mt-3\">Don't have an account? <u>Create an account</u></p>\r\n    </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}