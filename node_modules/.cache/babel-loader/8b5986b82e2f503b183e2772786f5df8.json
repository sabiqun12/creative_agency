{"ast":null,"code":"import _slicedToArray from\"D:/web development/creative_agency/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext}from'react';import firebase from\"firebase/app\";import\"firebase/auth\";import firebaseConfig from'./firebase.config';import{useHistory,useLocation}from'react-router';import'./Login.css';import{UserContext}from'../../../App';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(){if(firebase.apps.length===0){firebase.initializeApp(firebaseConfig);}var _useContext=useContext(UserContext),_useContext2=_slicedToArray(_useContext,2),loggedInUser=_useContext2[0],setLoggedInUser=_useContext2[1];var history=useHistory();var location=useLocation();var _ref=location.state||{from:{pathname:\"/\"}},from=_ref.from;var provider=new firebase.auth.GoogleAuthProvider();var handleGoogleSignIn=function handleGoogleSignIn(){firebase.auth().signInWithPopup(provider).then(function(result){var _result$user=result.user,displayName=_result$user.displayName,email=_result$user.email;var signedInUser={name:displayName,email:email};setLoggedInUser(signedInUser);history.replace(from);}).catch(function(error){var errorCode=error.code;var errorMessage=error.message;// The email of the user's account used.\nvar email=error.email;// The firebase.auth.AuthCredential type that was used.\nvar credential=error.credential;// ...\n});};return/*#__PURE__*/_jsx(\"div\",{className:\"login-container d-flex align-items-center justify-content-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-form text-center\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"mb-3\",children:\"LOGIN WITH\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleGoogleSignIn,className:\"btn btn-warning rounded-pill login-btn\",children:\"Continue with google\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"mt-3\",children:[\"Don't have an account? \",/*#__PURE__*/_jsx(\"u\",{children:\"Create an account\"})]})]})});};export default Login;","map":{"version":3,"sources":["D:/web development/creative_agency/client/src/components/Home/Login/Login.js"],"names":["React","useContext","firebase","firebaseConfig","useHistory","useLocation","UserContext","Login","apps","length","initializeApp","loggedInUser","setLoggedInUser","history","location","state","from","pathname","provider","auth","GoogleAuthProvider","handleGoogleSignIn","signInWithPopup","then","result","user","displayName","email","signedInUser","name","replace","catch","error","errorCode","code","errorMessage","message","credential"],"mappings":"gKAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAO,eAAP,CACA,MAAOC,CAAAA,cAAP,KAA2B,mBAA3B,CACA,OAASC,UAAT,CAAqBC,WAArB,KAAwC,cAAxC,CACA,MAAO,aAAP,CACA,OAASC,WAAT,KAA4B,cAA5B,C,wFAGA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAChB,GAAIL,QAAQ,CAACM,IAAT,CAAcC,MAAd,GAAyB,CAA7B,CAAgC,CAC5BP,QAAQ,CAACQ,aAAT,CAAuBP,cAAvB,EACH,CAHe,gBAKwBF,UAAU,CAACK,WAAD,CALlC,4CAKTK,YALS,iBAKKC,eALL,iBAMhB,GAAMC,CAAAA,OAAO,CAAGT,UAAU,EAA1B,CACA,GAAMU,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CAPgB,SAQCS,QAAQ,CAACC,KAAT,EAAkB,CAAEC,IAAI,CAAE,CAAEC,QAAQ,CAAE,GAAZ,CAAR,CARnB,CAQRD,IARQ,MAQRA,IARQ,CAUhB,GAAME,CAAAA,QAAQ,CAAG,GAAIhB,CAAAA,QAAQ,CAACiB,IAAT,CAAcC,kBAAlB,EAAjB,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC7BnB,QAAQ,CAACiB,IAAT,GACKG,eADL,CACqBJ,QADrB,EAEKK,IAFL,CAEU,SAACC,MAAD,CAAY,kBACiBA,MAAM,CAACC,IADxB,CACNC,WADM,cACNA,WADM,CACOC,KADP,cACOA,KADP,CAEd,GAAMC,CAAAA,YAAY,CAAG,CAAEC,IAAI,CAAEH,WAAR,CAAqBC,KAAK,CAALA,KAArB,CAArB,CACAf,eAAe,CAACgB,YAAD,CAAf,CACAf,OAAO,CAACiB,OAAR,CAAgBd,IAAhB,EAEH,CARL,EAQOe,KARP,CAQa,SAACC,KAAD,CAAW,CAChB,GAAIC,CAAAA,SAAS,CAAGD,KAAK,CAACE,IAAtB,CACA,GAAIC,CAAAA,YAAY,CAAGH,KAAK,CAACI,OAAzB,CACA;AACA,GAAIT,CAAAA,KAAK,CAAGK,KAAK,CAACL,KAAlB,CACA;AACA,GAAIU,CAAAA,UAAU,CAAGL,KAAK,CAACK,UAAvB,CACA;AACH,CAhBL,EAiBH,CAlBD,CAmBA,mBACI,YAAK,SAAS,CAAC,kEAAf,uBACA,aAAK,SAAS,CAAC,wBAAf,wBACA,WAAI,SAAS,CAAC,MAAd,wBADA,cAEA,eAAQ,OAAO,CAAEhB,kBAAjB,CAAqC,SAAS,CAAC,wCAA/C,kCAFA,cAGA,WAAG,SAAS,CAAC,MAAb,kDAA2C,wCAA3C,GAHA,GADA,EADJ,CASH,CAxCD,CA0CA,cAAed,CAAAA,KAAf","sourcesContent":["import React, { useContext } from 'react';\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport './Login.css';\r\nimport { UserContext } from '../../../App';\r\n\r\n\r\nconst Login = () => {\r\n    if (firebase.apps.length === 0) {\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n    const handleGoogleSignIn = () => {\r\n        firebase.auth()\r\n            .signInWithPopup(provider)\r\n            .then((result) => {\r\n                const { displayName, email } = result.user;\r\n                const signedInUser = { name: displayName, email }\r\n                setLoggedInUser(signedInUser);\r\n                history.replace(from);\r\n                \r\n            }).catch((error) => {\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                // The email of the user's account used.\r\n                var email = error.email;\r\n                // The firebase.auth.AuthCredential type that was used.\r\n                var credential = error.credential;\r\n                // ...\r\n            });\r\n    }\r\n    return (\r\n        <div className=\"login-container d-flex align-items-center justify-content-center\">\r\n        <div className=\"login-form text-center\">\r\n        <h1 className=\"mb-3\">LOGIN WITH</h1>\r\n        <button onClick={handleGoogleSignIn} className=\"btn btn-warning rounded-pill login-btn\">Continue with google</button>\r\n        <p className=\"mt-3\">Don't have an account? <u>Create an account</u></p>\r\n    </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}